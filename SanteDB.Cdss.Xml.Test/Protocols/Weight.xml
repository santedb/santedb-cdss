<?xml version="1.0" encoding="utf-8" ?>
<!--
 - Copyright 2021-2022 SanteSuite Contributors (See NOTICE.md for full copyright notices)
 - Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 - Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 - 
 - Licensed under the Apache License, Version 2.0 (the "License"); you 
 - may not use this file except in compliance with the License. You may 
 - obtain a copy of the License at 
 - 
 - http://www.apache.org/licenses/LICENSE-2.0 
 - 
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 - License for the specific language governing permissions and limitations under 
 - the License.
 - 
 - User: fyfej
 - Date: 2022-5-30
 -->
<ProtocolDefinition xmlns="http://santedb.org/cdss" uuid="063FFFAD-FC37-4666-B949-4A96AE2A4FB9" id="Weight" name="Weigh Schedule">
  <when evaluation="and">
    <linqExpression>DateTime.Now.Subtract(_.Target.DateOfBirth.Value.Date).TotalDays &lt;= 1825</linqExpression>
  </when>
  <!-- Represents any reference sets -->
  <refSets>
    <!-- Weight references for MALES -->
    <refSet name="WeightScores">
      <data format="csv">
        <![CDATA[
              gender,age,low,nominal,high
              MALE,1,3,5,7
              ]]>
      </data>
    </refSet>
  </refSets>
  <rule id="Weight" repeat="60">
    <variable name="minDate" type="System.DateTimeOffset">_.Target.DateOfBirth.Value.Date.AddMonths(_.Get("index", Types.Integer))</variable>
    <variable name="maxDate" type="System.DateTimeOffset">_.Target.DateOfBirth.Value.Date.AddMonths(_.Get("index", Types.Integer) + 1).AddDays(-1).AddHours(23).AddMinutes(59)</variable>
    <when evaluation="and">
      <!-- Patient does not have Weights taken or proposed-->
      <hdsiExpression negationIndicator="true">participation[RecordTarget].source.typeConcept?.mnemonic=VitalSign-Weight&amp;participation[RecordTarget].source.actTime=>$minDate&amp;participation[RecordTarget].source.actTime=&lt;$maxDate</hdsiExpression>
    </when>
    <then>
      <action>
        <jsonModel>
          <![CDATA[
            {
              "$type": "QuantityObservation",
              "template": {
                "mnemonic": "Act.Observation.Weight"
              },
              "moodConcept": "ACF7BAF2-221F-4BC2-8116-CEB5165BE079",
              "classConcept": "28D022C6-8A8B-47C4-9E6A-2BC67308739E",
              "typeConceptModel" : {
                "id": "a261f8cd-69b0-49aa-91f4-e6d3e5c612ed",
                "mnemonic":"VitalSign-Weight"
              },
              "unitOfMeasure" : "a0a8d4db-db72-4bc7-9b8c-c07cef7bc796"
            }
          ]]>
        </jsonModel>
        <assign propertyName="ActTime">_.Target.DateOfBirth.Value.Date.AddMonths((int)_.Get("index", Types.Integer))</assign>
        <assign propertyName="StartTime">_.Get("minDate", Types.DateTime)</assign>
        <assign propertyName="StopTime">_.Get("maxDate", Types.DateTime)</assign>
      </action>
    </then>
  </rule>
  <!-- Insights are used for the data captured -->
  <insight id="weight.interpretation">
    <variable name="gender" type="System.String">_.Expand("participation[RecordTarget].player@Patient.genderConcept.mnemonic")</variable>
    <variable name="age" type="System.Int32">DateTime.Today.Subtract(_.Expand("participation[RecordTarget].player@Patient.dateOfBirth")).TotalDays / 7</variable>
    <!-- Transform weight if recorded in LBS -->
    <transform>
      <when>
        <hdsiExpression>unitOfMeasure=49974584-7c48-457e-a79c-031cdd62714a</hdsiExpression>
      </when>
      <then>
        <assign property="Value">_.Target.Value * 0.4535</assign>
      </then>
    </transform>
    <!-- When the value is less than the underweight threshold -->
    <case>
      <when>
        <linqExpression>
          <![CDATA[_.RefSet("WeightScores").Where("gender", _.Get("gender")).Where("age", _.Get("age")).Select("low") > _.Target.Value]]>
        </linqExpression>
      </when>
      <then>
        <assign propertyName="interpretationConcept">
          <!-- code for low -->
        </assign>
      </then>
      <then>
        <action>
          <jsonModel>
            <![CDATA[
                  {
                    "$type" : "DetectedIssue",
                    "text" : "ui.user.underweight",
                    "priority" : "Warning"
                  }
                ]]>
          </jsonModel>
        </action>
      </then>
    </case>
    <!-- When the weight is above the high threshold -->
    <case>
      <linqExpression>
        <![CDATA[_.RefSet("WeightScores").Where("gender", _.Get("gender")).Where("age", _.Get("age")).Select("high") < _.Target.Value]]>
      </linqExpression>
      <then>
        <assign propertyName="interpretationConcept">
          <!-- code for high -->
        </assign>
      </then>
    </case>
    <otherwise>
      <then>
        <assign propertyName="interpretationConcept">
          <!-- code for normal -->
        </assign>
      </then>
      <then>
        <action>
          <jsonModel>
            <![CDATA[
                  {
                    "$type" : "DetectedIssue",
                    "text" : "ui.user.underweight",
                    "priority" : "Warning"
                  }
                ]]>
          </jsonModel>
        </action>
      </then>
    </otherwise>
  </insight>
</ProtocolDefinition>