//
// Copyright (C) 2021 - 2023, SanteSuite Inc. and the SanteSuite Contributors (See NOTICE.md for full copyright notices)
// Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
// Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
// 
// Licensed under the Apache License, Version 2.0 (the "License"); you 
// may not use this file except in compliance with the License. You may 
// obtain a copy of the License at 
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
// License for the specific language governing permissions and limitations under 
// the License.
//
include <org.santedb.cdss.core>
include <org.santedb.cdss.core.childcare>
define library "Rotavirus Childhood Vaccination Schedule Logic"
	having id <org.santedb.cdss.vaccine.rota>
	having uuid {d4dfd6c2-2a83-4a4e-bbfe-7d607604a60c}
	having status active
	with metadata
		author SanteSuite Inc. and the SanteSuite Contributors
		version 3.08
		doc This library contains the necessary logic elements for the ROTA virus oral vaccination
	end metadata
	as
	define logic "Rotavirus Vaccine Core Logic"
		having id <org.snatedb.cdss.vaccine.rota.patient>
		having status active
		having context Patient when all(
				"Patient Is A Child",
				"Patient Is Not Deceased"
			)

		as
		define fact "Patient's Last Administration of ROTA Dose 1"
		as
			query(
				from hdsi($$participation[RecordTarget]$$)
				where hdsi($$
          source.isNegated=false&
          source.participation[Product].player.typeConcept.mnemonic=VaccineType-rotavirus&
          source@SubstanceAdministration.doseSequence=1
          $$)
				select last hdsi($$source@SubstanceAdministration$$)
				order by hdsi($$source.actTime$$)
			)

		end fact
		define fact "Patient's Last Administration of ROTA Dose 2"
		as
			query(
				from hdsi($$participation[RecordTarget]$$)
				where hdsi($$
            source.isNegated=false&
            source.participation[Product].player.typeConcept.mnemonic=VaccineTime-rotavirus&
            source@SubstanceAdministration.doseSequence=2
            $$)
				select last hdsi($$source@SubstanceAdministration$$)
				order by hdsi($$source.actTime$$)
			)

		end fact
		define fact "Patient Has an Unresolved AEFI to ROTA Dose"
			with metadata
				doc Patient has an active (unresolved) AEFI to a previous dose of ROTA
			end metadata
		as
			any(
				hdsi($$
            participation[RecordTarget].source.typeConcept=0744B6AD-BE39-4A08-B64D-F61CB8282267
            &participation[RecordTarget].source.relationship[HasSubject].target.typeConcept=0124fde0-7857-4815-b257-74acaa0dd92d
            &participation[RecordTarget].source.relationship[RefersTo].target.participation[Product].player.typeConcept.mnemonic=VaccineType-rotavirus
          $$),
				hdsi($$
            participation[RecordTarget].source.typeConcept=0124fde0-7857-4815-b257-74acaa0dd92d&
            participation[RecordTarget].source@CodedObservation.value.mnemonic=VaccineType-rotavirus&
            participation[RecordTarget].source.isNegated=false
          $$)
			)

		end fact
		define fact "Patient Refused Previous ROTA Dose"
			with metadata
				doc When a patient has refused a previous dose of ROTA due to personal or religious reasons
			end metadata
		as
			hdsi($$
          participation[RecordTarget].source.isNegated=true&
          participation[RecordTarget].source.participation[Product].player.typeConcept.mnemonic=VaccineType-rotavirus&
          participation[RecordTarget].source.reasonConcept.conceptSet=3BD46185-E3C3-4A6D-A1FE-0F2C9C49360D
        $$)
		end fact
		define fact "Patient Should Receive ROTA Dose 1"
		as
			none(
				"Patient's Last Administration of ROTA Dose 1",
				"Patient Refused Previous ROTA Dose"
			)

		end fact
		define fact "Patient Should Receive ROTA Dose 2"
		as
			all(
				"Patient's Last Administration of ROTA Dose 1",
				none(
					"Patient's Last Administration of ROTA Dose 2",
					"Patient Refused Previous ROTA Dose"
				)

			)

		end fact
		define model "ROTA Dose Administration"
			having format json
		as
			$$

        {
			   "$type": "SubstanceAdministration",
               "template":"50ac9b2d-e560-4b75-ac77-921bf0eceee8",
              "templateModel" : {
                "mnemonic" : "org.santedb.emr.sbadm.immunization",
                "oid": "1.3.5.1.4.1.52820.5.2.3.2"
              },
              "typeConcept": "6e7a3521-2967-4c0a-80ec-6c5c197b2178",
              "doseQuantity" : 1.0,
              "doseUnit" : "a4fc5c93-31c2-4f87-990e-c5a4e5ea2e76",
			  "site" : "e5b6847e-91e0-4fca-ac2e-753962008080",
              "route" : "0a1388b0-66fb-4063-bfe3-151dd8442838",
			  "participation": {
			      "Product": [{
            	      "player" : "DD53B8FF-2F4D-4359-A031-9405AD384893"
				  }]
			  }
		}
			$$
		end model
		define rule "Raise Alert when Patient is to Receive ROTA but has an AEFI"
		as
			when
				all(
					any(
						"Patient Should Receive ROTA Dose 1",
						"Patient Should Receive ROTA Dose 2"
					),
					"Patient Has an Unresolved AEFI to ROTA Dose"
				)

			then
				raise having priority warn 
					having type {1a4fff6c-f54f-11e8-8eb2-f2801f1b9fd1}
				$$Patient has an unresolved AEFI and/or drug allergy/intolerance to ROTAvirus Reported - Please consult with patient prior to administration of ROTA$$
		end rule
		define rule "Recommend ROTA Dose 1"
			with metadata
				doc Patient Should be recommended a ROTA dose 1 after 42 days of birth but before 3 months old
			end metadata
		as
			when
				"Patient Should Receive ROTA Dose 1"
			then
				propose  having model "ROTA Dose Administration"
				as
					assign csharp($$context.LesserOf(context.GreaterOf(DateTime.Now, context.Target.DateOfBirth.Value.AddDays(42)), context.Target.DateOfBirth.Value.AddMonths(3))$$) to actTime
					assign csharp($$context.Target.DateOfBirth.Value.AddDays(42)$$) to startTime
					assign csharp($$context.Target.DateOfBirth.Value.AddMonths(3)$$) to stopTime
					assign const "1" to doseSequence
					assign const "F3BE6B88-BC8F-4263-A779-86F21EA10A47" to typeConcept overwrite
				end propose
		end rule
		define rule "Recommend ROTA Dose 2"
			with metadata
				doc Patient should receive ROTA dose 2 4 weeks after first dose, but not after 3 months of birth
			end metadata
		as
			when
				"Patient Should Receive ROTA Dose 2"
			then
				propose  having model "ROTA Dose Administration"
				as
					assign csharp($$((Act)context["Patient's Last Administration of ROTA Dose 1"]).ActTime.Value.AddDays(28)$$) to actTime
					assign hdsi($$actTime$$ scoped-to proposal) to startTime
					assign csharp($$context.Target.DateOfBirth.Value.AddMonths(4)$$) to stopTime
					assign const "2" to doseSequence
				end propose
		end rule
		define protocol "ROTAvirus Vaccine Protocol for Children"
			having id <org.santedb.cdss.vaccine.rota.protocol>
			having uuid {d4dfd6c2-2a83-4a4e-bbfe-7d607604a60c}
			having oid "1.3.5.1.4.1.52820.5.2.3.2.9"
			having scope <org.santedb.ims.pediatric.routineVacc>
		as
			when
				all(
					"Patient is a Child",
					"Patient is not deceased"
				)

			then
				apply "Recommend ROTA Dose 1"
				apply "Recommend ROTA Dose 2"
		end protocol
	end logic
end library
